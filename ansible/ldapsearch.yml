- name: LDAP Search for User Groups in FreeIPA
  hosts: ipa
  gather_facts: false
  pre_tasks:
    - name: Assert required environment variables are set
      ansible.builtin.assert:
        that:
          - lookup('env', 'LDAP_SERVER') is defined
          - lookup('env', 'LDAP_USERNAME') is defined
          - lookup('env', 'LDAP_PASSWORD') is defined
        fail_msg: "Environment variables LDAP_SERVER, LDAP_USERNAME, and LDAP_PASSWORD must be set."

    - name: Assert that username is provided
      ansible.builtin.assert:
        that:
          - username is defined
        fail_msg: "Username must be defined for LDAP search."
  tasks:
    - name: Authenticate to FreeIPA and get session cookie
      uri:
        url: "https://{{ lookup('env', 'LDAP_SERVER') }}/ipa/session/login_password"
        method: POST
        headers:
          Referer: "https://{{ lookup('env', 'LDAP_SERVER') }}/ipa"
          Content-Type: "application/x-www-form-urlencoded"
        body: "user={{ lookup('env', 'LDAP_USERNAME') }}&password={{ lookup('env', 'LDAP_PASSWORD') }}"
        body_format: form-urlencoded
        validate_certs: false
        status_code: 200
        return_content: true
      register: ipa_login

    - name: Query user information from FreeIPA API
      uri:
        url: "https://{{ lookup('env', 'LDAP_SERVER') }}/ipa/session/json"
        method: POST
        headers:
          Cookie: "{{ ipa_login.set_cookie }}"
          Referer: "https://{{ lookup('env', 'LDAP_SERVER') }}/ipa"
          Content-Type: "application/json"
          Accept: "application/json"
        body_format: json
        body:
          method: "user_show"
          params:
            - ["{{ username }}"]
            - {"all": true, "raw": false}
        validate_certs: false
        return_content: true
      register: ipa_user_info

    - name: Set artifact with user group names
      set_stats:
        data:
          ipa_group_names: "{{ ipa_user_info.json.result.result.memberof_group | default([]) }}"
